<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>andy's blog</title><link href="/" rel="alternate"></link><link href="/feeds/linux.atom.xml" rel="self"></link><id>/</id><updated>2016-01-14T00:00:00+08:00</updated><entry><title>Linux常用命令</title><link href="/linuxchang-yong-ming-ling.html" rel="alternate"></link><updated>2016-01-14T00:00:00+08:00</updated><author><name>andy.zhangtao</name></author><id>tag:,2016-01-14:linuxchang-yong-ming-ling.html</id><summary type="html">&lt;h1&gt;Linux常用命令(TBD)&lt;/h1&gt;
&lt;h2&gt;删除邮件&lt;/h2&gt;
&lt;p&gt;&lt;br/&gt;
每次登录时都会显示"you have new mail"，挺烦人的。 执行下面的命令删除掉所有邮件:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mail
? delete *
? q
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;LFTP下载文件&lt;/h2&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;多线程下载&lt;/h3&gt;
&lt;p&gt;lftp -c "pget -n &amp;lt;线程数量&amp;gt; 文件路径"
&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;多线程下载＋文件重命名&lt;/h3&gt;
&lt;p&gt;lftp -c "pget -n &amp;lt;线程数量&amp;gt; 文件路径 －o 本地文件名"&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Sed修改文件&lt;/h2&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;删除一行&lt;/h3&gt;
&lt;p&gt;sed -i "2d"  &lt;file path&gt; #删除第二行
&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;获取行号&lt;/h3&gt;
&lt;p&gt;sed -n -e "/&amp;lt;匹配字符串&amp;gt;/="  &lt;file path&gt; #获取匹配字符串所在行号
&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;使用变量&lt;/h3&gt;
&lt;p&gt;sed -i "s/${OLDBUILD}/${MYBUILD}/" ${PWD}/${FILEPATH} #使用&lt;strong&gt;""&lt;/strong&gt;才可以引入变量
&lt;br/&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;&amp;amp;和&amp;amp;&amp;amp;的区别&lt;/h2&gt;
&lt;p&gt;&amp;amp;表示当前命令作为后台进程执行，不阻塞后面命令的执行。
而&amp;amp;&amp;amp;表示只有当前面命令执行成功后才能执行后面的命令，而||则相反，只有前面命令失败之后才会执行后面的命令。
&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;使用case的例子&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;case &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; in&lt;/span&gt;
&lt;span class="x"&gt;    all )&lt;/span&gt;
&lt;span class="x"&gt;        command&lt;/span&gt;
&lt;span class="x"&gt;        ;;&lt;/span&gt;
&lt;span class="x"&gt;    build )&lt;/span&gt;
&lt;span class="x"&gt;        command&lt;/span&gt;
&lt;span class="x"&gt;        ;;&lt;/span&gt;
&lt;span class="x"&gt;    replace )&lt;/span&gt;
&lt;span class="x"&gt;        command&lt;/span&gt;
&lt;span class="x"&gt;        ;;&lt;/span&gt;
&lt;span class="x"&gt;    runuat )&lt;/span&gt;
&lt;span class="x"&gt;        command&lt;/span&gt;
&lt;span class="x"&gt;        ;;&lt;/span&gt;
&lt;span class="x"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;判断参数是否为空的例子&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;TYPE=&amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;

t_usage()
{
    echo
    echo &amp;quot;Usage: {Type} {Projectname}&amp;quot;
    exit -1
} # t_usage

if [ -z &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;TYPE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; ] ; then
    t_usage
fi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;使用for循环的例子&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;WEB_BUILD[0]=&amp;quot;command&amp;quot;
WEB_BUILD[1]=&amp;quot;command&amp;quot;
WEB_BUILD[2]=&amp;quot;command &amp;quot; 

for i in &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;WEB_BUILD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;; do 
    bash -c &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;WEB_BUILD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; &amp;gt;&amp;gt; /tmp/build.log 
done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;通过ftp下载多个文件时关闭提示&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ftp&amp;gt; prompt
ftp&amp;gt; mget *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;通过Lftp镜像远程目录&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lftp -e &amp;quot;mirror -P &amp;lt;并行下载文件个数&amp;gt; &amp;quot; &amp;lt;FTP/SFTP IP/Hostname&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Linux常见压缩文件的解压&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1、*.tar 用 tar –xvf 解压
2、*.gz 用 gzip -d或者gunzip 解压
3、*.tar.gz和*.tgz 用 tar –xzf 解压
4、*.bz2 用 bzip2 -d或者用bunzip2 解压
5、*.tar.bz2用tar –xjf 解压
6、*.Z 用 uncompress 解压
7、*.tar.Z 用tar –xZf 解压
8、*.rar 用 unrar e解压
9、*.zip 用 unzip 解压
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;使用GREP显示行号&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;grep -n &amp;lt;data&amp;gt; FILENAME
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</summary></entry></feed>